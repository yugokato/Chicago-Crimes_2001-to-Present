########################## SHARD 01 ################################

# mongo-S01-R03
docker exec -it mongo-S01-R03 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard1/rs3
sudo mongod --shardsvr --replSet s1 --logpath /data/shard1/rs3/s1-r3.log --dbpath /data/shard1/rs3 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
exit


# mongo-S01-R02
docker exec -it mongo-S01-R02 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard1/rs2
sudo mongod --shardsvr --replSet s1 --logpath /data/shard1/rs2/s1-r2.log --dbpath /data/shard1/rs2 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
exit


# mongo-S01-R01
docker exec -it mongo-S01-R01 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard1/rs1
sudo mongod --shardsvr --replSet s1 --logpath /data/shard1/rs1/s1-r1.log --dbpath /data/shard1/rs1 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
sleep 5
sudo mongo --port 27018 << 'EOF'
config = { _id: "s1", members: [
    {_id: 0, host: "172.31.0.11:27018", priority: 2},
    {_id: 1, host: "172.31.0.12:27018", priority: 1},
    {_id: 2, host: "172.31.0.13:27018", priority: 0} ]};
rs.initiate(config)
EOF
exit

########################## SHARD 02 ################################

# mongo-S02-R03
docker exec -it mongo-S02-R03 /bin/bash
sudo killall mongod
sudo sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard2/rs3
sudo mongod --shardsvr --replSet s2 --logpath /data/shard2/rs3/s2-r3.log --dbpath /data/shard2/rs3 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
exit

# mongo-S02-R02
docker exec -it mongo-S02-R02 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard2/rs2
sudo mongod --shardsvr --replSet s2 --logpath /data/shard2/rs2/s2-r2.log --dbpath /data/shard2/rs2 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
exit


# mongo-S02-R01
docker exec -it mongo-S02-R01 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard2/rs1
sudo mongod --shardsvr --replSet s2 --logpath /data/shard2/rs1/s2-r1.log --dbpath /data/shard2/rs1 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
sleep 5
sudo mongo --port 27018 << 'EOF'
config = { _id: "s2", members: [
    {_id: 0, host: "172.31.0.21:27018", priority: 2},
    {_id: 1, host: "172.31.0.22:27018", priority: 1},
    {_id: 2, host: "172.31.0.23:27018", priority: 0} ]};
rs.initiate(config)
EOF
exit

########################## SHARD 03 ################################

# mongo-S03-R03
docker exec -it mongo-S03-R03 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard3/rs3
sudo mongod --shardsvr --replSet s3 --logpath /data/shard3/rs3/s3-r3.log --dbpath /data/shard3/rs3 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
exit

# mongo-S03-R02
docker exec -it mongo-S03-R02 /bin/bash
sudo killall mongod
sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard3/rs2
sudo mongod --shardsvr --replSet s3 --logpath /data/shard3/rs2/s3-r2.log --dbpath /data/shard3/rs2 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
exit


# mongo-S03-R01
docker exec -it mongo-S03-R01 /bin/bash
sudo killall mongod
sudo sudo killall mongos
#sudo rm -rf /data/shard*
sudo mkdir -p /data/shard3/rs1
sudo mongod --shardsvr --replSet s3 --logpath /data/shard3/rs1/s3-r1.log --dbpath /data/shard3/rs1 --port 27018 --wiredTigerEngineConfigString="cache_size=100M" &
sleep 5
sudo mongo --port 27018 << 'EOF'
config = { _id: "s3", members: [
    {_id: 0, host: "172.31.0.31:27018", priority: 2},
    {_id: 1, host: "172.31.0.32:27018", priority: 1},
    {_id: 2, host: "172.31.0.33:27018", priority: 0} ]};
rs.initiate(config)
EOF
exit


########################## Config Servers  ################################

# ConfigSvr03
docker exec -it configSVR-03 /bin/bash
sudo killall mongod
#sudo rm -rf /data/config
sudo mkdir -p /data/config
sudo mongod --configsvr --replSet configReplSet --logpath /data/config/cfg3.log --dbpath /data/config --port 27019 --wiredTigerEngineConfigString="cache_size=100M" &
exit

# ConfigSvr02
docker exec -it configSVR-02 /bin/bash
sudo killall mongod
#sudo rm -rf /data/config
sudo mkdir -p /data/config
sudo mongod --configsvr --replSet configReplSet --logpath /data/config/cfg2.log --dbpath /data/config --port 27019 --wiredTigerEngineConfigString="cache_size=100M" &
exit

# ConfigSvr01
docker exec -it configSVR-01 /bin/bash
sudo killall mongod
#sudo rm -rf /data/config
sudo mkdir -p /data/config
sudo mongod --configsvr --replSet configReplSet --logpath /data/config/cfg1.log --dbpath /data/config --port 27019 --wiredTigerEngineConfigString="cache_size=100M" &
sleep 5
mongo --port 27019 << 'EOF'
    config = { 
        _id: "configReplSet", 
        configsvr: true,
        members: [
            {_id: 0, host: "172.31.0.41:27019", priority: 2},
            {_id: 1, host: "172.31.0.42:27019", priority: 1},
            {_id: 2, host: "172.31.0.43:27019", priority: 0} ]};
    rs.initiate(config)
EOF
exit


########################## mongos  ################################

# Start the mongos
sudo mongos --configdb configReplSet/172.31.0.41:27019,172.31.0.42:27019,172.31.0.43:27019 &
sleep 5
# add shards
sudo mongo << 'EOF'
db.adminCommand( {addshard: "s1/" + "172.31.0.11:27018"});
db.adminCommand( {addshard: "s2/" + "172.31.0.21:27018"});
db.adminCommand( {addshard: "s3/" + "172.31.0.31:27018"});
EOF


####################################################################
# Insert data (run main.py)
# db.createIndex({Date: 1})
# sh.enableSharding("chicago")
# sh.shardCollection("chicago.crimes", {Date: 1})

